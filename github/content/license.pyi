from typing import Optional

from github.interfaces import Node, Type
from github.content import LicenseRule


class License(Node, Type):
    @property
    def body(self) -> str: ...
    @property
    def choosealicense_url(self) -> Optional[str]: ...
    @property
    def conditions(self) -> list[LicenseRule]: ...
    @property
    def description(self) -> Optional[str]: ...
    @property
    def implementation(self) -> Optional[str]: ...
    @property
    def is_featured(self) -> bool: ...
    @property
    def is_hidden(self) -> bool: ...
    @property
    def is_pseudo(self) -> bool: ...
    @property
    def key(self) -> str: ...
    @property
    def limitations(self) -> list[LicenseRule]: ...
    @property
    def name(self) -> str: ...
    @property
    def nickname(self) -> Optional[str]: ...
    @property
    def permissions(self) -> list[LicenseRule]: ...
    @property
    def spdx_id(self) -> Optional[str]: ...

    async def fetch_body(self) -> str: ...
    async def fetch_choosealicense_url(self) -> Optional[str]: ...
    async def fetch_conditions(self) -> list[LicenseRule]: ...
    async def fetch_description(self) -> Optional[str]: ...
    async def fetch_implementation(self) -> Optional[str]: ...
    async def fetch_is_featured(self) -> bool: ...
    async def fetch_is_hidden(self) -> bool: ...
    async def fetch_is_pseudo(self) -> bool: ...
    async def fetch_key(self) -> str: ...
    async def fetch_limitations(self) -> list[LicenseRule]: ...
    async def fetch_name(self) -> str: ...
    async def fetch_nickname(self) -> Optional[str]: ...
    async def fetch_permissions(self) -> list[LicenseRule]: ...
    async def fetch_spdx_id(self) -> Optional[str]: ...
