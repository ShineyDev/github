name: Deploy

on:
  push:
  release:
    types: [ released ]

jobs:
  job:
    name: Deploy
    runs-on: ubuntu-latest

    env:
      DOCS_LATEST_PATH: dotcom
      DOCS_REPOSITORY: ${{ github.repository_owner }}/docs.shiney.dev
      DOCS_SOURCE_PATH: docs
      PYTHON_VERSION: 3.9
      SPHINX_OPTIONS: -b dirhtml -a -E -n -T -W --keep-going

    steps:
    - name: Checkout ${{ github.repository }}
      uses: actions/checkout@v2
      with:
        path: ${{ github.event.repository.name }}

    - name: Checkout ${{ env.DOCS_REPOSITORY }}
      uses: actions/checkout@v2
      with:
        path: docs
        repository: ${{ env.DOCS_REPOSITORY }}
        token: ${{ secrets.DOCS_TOKEN }}

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install
      working-directory: ./${{ github.event.repository.name }}
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade .[docs]

    - name: Build
      if: ${{ github.event_name == 'push' }}
      run: |
        if [ -d ./docs/${{ github.event.repository.name }}/${{ env.DOCS_LATEST_PATH }} ]; then rm -r ./docs/${{ github.event.repository.name }}/${{ env.DOCS_LATEST_PATH }}; fi
        python -m sphinx ${{ env.SPHINX_OPTIONS }} ./${{ github.event.repository.name }}/${{ env.DOCS_SOURCE_PATH }} ./docs/${{ github.event.repository.name }}/${{ env.DOCS_LATEST_PATH }}
        echo '<!DOCTYPE html><html><head><meta http-equiv="refresh" content="0;url=${{ env.DOCS_LATEST_PATH }}" /></head></html>' > ./docs/${{ github.event.repository.name }}/index.html

    - name: Build
      if: ${{ github.event_name == 'release' }}
      run: |
        if [ -d ./docs/${{ github.event.repository.name }}/${{ github.event.release.tag_name }} ]; then rm -r ./docs/${{ github.event.repository.name }}/${{ github.event.release.tag_name }}; fi
        python -m sphinx ${{ env.SPHINX_OPTIONS }} ./${{ github.event.repository.name }}/${{ env.DOCS_SOURCE_PATH }} ./docs/${{ github.event.repository.name }}/${{ github.event.release.tag_name }}
        cd docs/${{ github.event.repository.name }}
        if [ -d ./docs/${{ github.event.repository.name }}/stable ]; then rm -r ./docs/${{ github.event.repository.name }}/stable; fi
        cp -r ${{ github.event.release.tag_name }} stable

    - name: Push
      continue-on-error: true
      working-directory: docs
      run: |
        git config user.name ShineyDev
        git config user.email 30989490+ShineyDev@users.noreply.github.com
        git add .
        git commit -m "update docs to ${{ github.repository }}@${{ github.sha }}"
        git push
